#!/bin/bash
log='/var/log/cron.log';
fn_error () {
case $? in
    1)
    { echo 'ERROR! Could not get source from Github. Stopping' >> $log; exit 1; }
    ;;
    2)
    { echo 'ERROR! PHP build failed. Stopping' >> $log; exit 1; }
    ;;
    3)
    { echo 'ERROR! Source directory was not removed. Unable to stop at this point. Next time this runs, you might have problems.' >> $log; exit 1; }
    ;;
    *)
    { echo 'ERROR! ' ${0} ' command failed!' >> $log; exit 1; }
    ;;
esac
}
fn_cloneOrUpdate () {
[[ -d /usr/local/src/php-src ]] && fn_updatesrc || fn_clonesrc
}
fn_clonesrc () {
[[ ! -d /usr/local/src/php-src ]] && mkdir -p /usr/local/src;
git clone https://github.com/php/php-src.git --single-branch --shallow-submodules /usr/local/src/php-src || fn_error 1
echo 'Source clone succeeded.' >> $log;
}
fn_updatesrc () {
cd /usr/local/src/php-src
git pull --update-shallow --recurse-submodules=yes || fn_error 1
echo 'Source update succeeded.' >> $log;
}

fn_buildfromsrc () {
    cd /usr/local/src/php-src
    ./buildconf || fn_error
    ./configure --prefix=/usr/local --with-zip --enable-opcache --with-zlib --enable-sockets --with-openssl || fn_error
    make -j$(nproc) || fn_error
    make install || fn_error
    echo 'Build succeeded.' >> $log;
}

fn_cleanup () {
    cd /usr/local/src/php-src
    make distclean ||  fn_error
   echo 'Source directory cleaned' >> $log;
}



fn_cloneOrUpdate;
fn_buildfromsrc;
fn_cleanup;
